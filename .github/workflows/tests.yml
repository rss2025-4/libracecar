name: Tests

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: sebagarc/racecar2
      options: --privileged --user root

    env:
      PROJECT_DIR: ./src/libracecar

    steps:
      # https://github.com/marketplace/actions/install-poetry-action
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.PROJECT_DIR }}

      - uses: actions/checkout@v4
        with:
          repository: Sebastian-Garcia/racecar_simulator
          ref: 0e20c77dcc408c7b4babf153ef3baeadf5448ce8
          path: src/racecar_simulator

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PROJECT_DIR }}/.venv
          key: venv-racecardocker-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --all-extras
        working-directory: ${{ env.PROJECT_DIR }}

      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction --all-extras
        working-directory: ${{ env.PROJECT_DIR }}

      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        shell: bash
        run: |
          source .venv/bin/activate
          ./tests/run_tests_actions.sh
        working-directory: ${{ env.PROJECT_DIR }}
